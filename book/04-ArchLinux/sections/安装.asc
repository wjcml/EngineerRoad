=== arch安装
https://www.viseator.com/2017/05/17/arch_install/[archlinux 安装参考文档一] + 
https://fifilyu.github.io/seia/#_ArchLinux_chapter[archlinux 安装参考文档二]

[NOTE]
archlinux安装需要联网，建议使用网线，这里的文档暂不提供wifi安装，需要wifi安装，可以参考【archlinux 安装参考文档一】

==== 制作系统盘
.windows下
下载 *Rufus* 制作启动盘工具

.linux下
使用 *dd* 命令

==== 检查引导方式
目前的引导方式主要分为 *EFI引导+GPT分区表* 与 *BIOS(LEGACY)引导+MBR分区表* 两种，几乎比较新的机器都采用了EFI/GPT引导的方式。

如果不知道自己的引导方式，执行下列命令
[source, bash]
----
ls /sys/firmware/efi/efivars
----
如果执行该命令输出
----
ls: cannot access '/sys/firmware/efi/efivars': No such file or directory
----
表明你是以BIOS方式引导，否则为以EFI方式引导。

==== 更新系统时间
[source, bash]
----
timedatectl set-ntp true
----

==== 分区和格式化
.查看分区情况
[source, bash]
----
fdisk -l
----
我这里使用一块238.5G的硬盘（*/dev/sda*）

.创建一个引导分区
[source, bash]
----
fdisk /dev/sda
----
1.如果你是一块全新的硬盘：输入 *g* 来创建一个全新的 *gpt* 分区表，否则直接进行第2步。

2.输入 *n* 创建一个新的分区，输入 *+512M* 来创建一个 *512M* 的引导分区。

3.输入 *p* 来查看新创建的分区。

4.输入 *t* 并选择新创建的分区序号来更改分区的类型，输入 *l* 可以查看所有支持的类型，输入 *ef* 更改分区的类型为EFI。

5.输入 *w* 来将之前所有的操作写入磁盘生效，在这之前可以输入 *p* 来确认自己的分区表没有错误。

现在引导分区就创建好了。

.创建根分区
[source, bash]
----
fdisk /dev/sda
----
1.如果你是一块全新的硬盘（否则直接进行第2步）：

.. 如果你是 *BIOS/MBR* 引导方式：输入 *o* 来创建一个全新的MBR分区表。
.. 如果你在上一步新建了分区表并创建了引导分区：直接进行步骤2。
.. 如果你在另一块硬盘中已经有引导分区：输入 *g* 来创建一个全新的 *gpt* 分区表。

2.输入 *n* 创建一个新的分区，直接回车使用默认数值即可，然后可以输入结束扇区或是分区大小，如果我们想要使创建的分区完全占满空闲的空间，可以直接回车使用默认结束扇区。

3.这时我们可以输入 *p* 来查看新创建的分区。

4.输入 *w* 来将之前所有的操作写入磁盘生效，在这之前可以输入 *p* 来确认自己的分区表没有错误。

==== 格式化分区
.格式化根分区
[source, bash]
----
# /dev/sda2 是刚刚创建的根分区
mkfs.ext4 /dev/sda2
----

.格式化引导分区
[source, bash]
----
# /dev/sda1 是刚刚创建的引导分区
mkswap /dev/sda1
swapon /dev/sda1
mkfs.fat -F32 /dev/sda1
----

==== 挂载分区
[source, bash]
----
# /dev/sda2 是刚刚创建的根分区
mount /dev/sda2 /mnt
----

[NOTE]
====
如果是EFI/GPT引导方式，执行以下命令创建/boot文件夹并将引导分区挂载到上面。BIOS/MBR引导方式无需进行这步。

----
# /dev/sda1 是刚刚创建的引导分区
mkdir /mnt/boot
mount /dev/sda1 /mnt/boot
----
====

==== 设置国内镜像源
[source, bash]
----
cat << EOF > /etc/pacman.d/mirrorlist
Server = https://mirrors.163.com/archlinux/\$repo/os/\$arch
EOF
----

[NOTE]
====
这里推荐使用网易的镜像源，如果执行pacman下载包出现问题，可以再加上下面两个源
----
Server = http://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch
Server = http://mirrors.zju.edu.cn/archlinux/$repo/os/$arch
----

注意：在最近的更新中，archlinux 添加了 `/etc/pacman.d/mirrorlist.pacnew` 这个文件，在这个文件中放了很多镜像源，我们可以在该文件中的 *China* 下找到。
====

==== 安装基础包
[source, bash]
----
pacstrap /mnt base base-devel linux linux-firmware dhcpcd
----

==== 开机挂载分区
[source, bash]
----
genfstab -U /mnt >> /mnt/etc/fstab
----

==== 换到全新 Arch Linux 系统
[source, bash]
----
arch-chroot /mnt
----

==== 设置时区
依次执行如下命令设置我们的时区为上海并生成相关文件：
[source, bash]
----
ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
hwclock --systohc
----

==== 本地化语言支持
.启用语言参数：
----
echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
echo "zh_CN.GB18030 GB18030" >> /etc/locale.gen
echo "zh_CN.GBK GBK" >> /etc/locale.gen
echo "zh_CN.UTF-8 UTF-8" >> /etc/locale.gen
echo "zh_CN GB2312" >> /etc/locale.gen
----

[NOTE]
====
除了使用上面的方式启用语言参数，也可以使用下面的这种方法,直接编辑 `/etc/locale.gen` 取消掉 `en_US.UTF-8 UTF-8`, `zh_CN.GB18030 GB18030`, `zh_CN.GBK GBK`, `zh_CN.UTF-8 UTF-8`, `zh_CN GB2312` 这几个前面的 `#` 号。
----
vim /etc/locale.gen
----
====

.生成locale
[source, bash]
----
locale-gen
----

.设置系统默认语言
这里默认使用英语，如果要使用中文，将 `LANG=en_US.UTF-8` 替换成 `LANG=zh_CN.UTF-8`
[source, bash]
----
echo "LANG=en_US.UTF-8" > /etc/locale.conf
----

==== 键盘布局
[source, bash]
----
echo "KEYMAP=us" > /etc/vconsole.conf
----

==== 设置主机名
[source, bash]
----
echo '127.0.0.1 localhost' > /etc/hosts
# 添加主机名对应的设置
echo '127.0.0.1 archlinux' >> /etc/hosts
----

==== 设置root密码
[source, bash]
----
passwd
----

==== 创建用户
[source, bash]
----
# 新增用户：
useradd -m wjc

# 设置用户密码：
passwd wjc

# 添加到sudo列表：
pacman -S sudo
echo 'wjc   ALL=(ALL) ALL' >> /etc/sudoers
----

==== 安装Grub引导
如果是传统的方式启动的BIOS
[source, bash]
----
pacman -S grub

grub-install --target=i386-pc --recheck /dev/sda

pacman -S linux linux-headers linux-lts linux-lts-headers

grub-mkconfig -o /boot/grub/grub.cfg
----

如果是使用UEFI启动的BIOS，请用以下方式安装和设置Grub引导：
[source, bash]
----
pacman -S grub efibootmgr

grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=arch

pacman -S linux linux-headers linux-lts linux-lts-headers

grub-mkconfig -o /boot/grub/grub.cfg
----

==== 安装桌面
[source, bash]
----
# 更新软件包索引
pacman -Syy

# 桌面环境
pacman -S gnome vim

# WIFI驱动
pacman -S linux-firmware

# 拼音输入法
pacman -S ibus-sunpinyin sunpinyin sunpinyin-data

# 显卡驱动
pacman -S xf86-video-fbdev xf86-video-intel xf86-video-vesa xf86-video-ati xf86-video-amdgpu

# 汉字字体
pacman -S wqy-microhei wqy-zenhei

# 开机启动
systemctl enable NetworkManager
systemctl enable gdm
----

==== 重启
[source, bash]
----
exit

reboot
----

==== 增加 `archlinuxcn`
增加 Arch Linux 中文社区仓库 的腾讯镜像服务器： + 
Arch Linux 中文社区仓库 包含深度QQ、深度TIM、WPS、Google Chrome浏览器、WPS等等不开源的软件。
[source, bash]
----
# 进入root
sudo -i

cat << EOF >> /etc/pacman.conf

[archlinuxcn]
Server = https://mirrors.cloud.tencent.com/archlinuxcn/\$arch
SigLevel = Optional TrustAll

EOF

exit
----

==== 安装常用软件
在桌面打开终端，复制以下命令一次性安装, 有可能出现，一次性安装会报错，不能安装成功的情况，建议一个一个的安装
[source, bash]
----
pacman -Syy

pacman -S archlinuxcn-keyring

pacman -S gedit vim screen thunderbird thunderbird-i18n-zh-cn openssh bash-completion cmake git curl wget filezilla gcc make  mlocate  nginx ntp p7zip rsync virtualbox  virtualbox-guest-iso virtualbox-host-dkms file-roller parted sshpass rdesktop qt5 fakeroot google-chrome openssl wireshark-qt
----

==== 系统设置
在桌面打开终端，执行以下命令：
[source, bash]
----
# GNOME 桌面设置 
gsettings set org.gnome.nautilus.preferences always-use-location-entry true
gsettings set org.gnome.nautilus.preferences default-sort-order name 
gsettings set org.gtk.Settings.FileChooser sort-directories-first true 
gsettings set org.gnome.desktop.interface clock-show-date true 
gsettings set org.gnome.desktop.interface clock-show-seconds true 
# Ctrl+Shift+Alt+R 录像时，30秒后自动结束。设置为0,不限制 
gsettings set org.gnome.settings-daemon.plugins.media-keys max-screencast-length 0

# virtualbox 设置
sudo gpasswd -a root vboxusers
sudo gpasswd -a $USER vboxusers

# wireshark 设置
sudo gpasswd -a root wireshark
sudo gpasswd -a $USER wireshark
sudo grpunconv

# 开机启动 
systemctl enable systemd-timesyncd
systemctl start systemd-timesyncd
sudo systemctl enable sshd
sudo systemctl mask tmp.mount
----

[NOTE]
默认不能使用 `root` 用户 SSH 连接 Arch Linux。请修改 `/etc/ssh/sshd_config` 中的 `PermitRootLogin` 为 `yes` 。


