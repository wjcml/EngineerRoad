=== 悲观锁和乐观锁

.悲观锁
****
悲观锁是一种利用数据库内部机制提供的锁的方法，也就是对更新的数据加锁，这样在并发期间一旦有一个事务持有了数据库记录的锁，其他的线程将不能再对数据进行更新了，这就是悲观锁的实现方式。

对于悲观锁来说，当一条线程抢占了资源后，其他的线程将得不到资源，那么这个时候，CPU 就会将这些得不到资源的线程挂起，挂起的线程也会消耗 CPU 的资源，尤其是在高并发的请求中。
****

.悲观锁
****
乐观锁是一种不会阻塞其他线程并发的机制，它不会使用数据库的锁进行实现，它的设计里面由于不阻塞其他线程，所以并不会引发线程频繁挂起和恢复，这样便能够提高并发能力，所以也有人把它称为非阻塞锁。

对于多个线程共同的资源，先保存一个旧值（Old Value），比如进入线程后，记录旧值，然后经过一定的逻辑处理。当需要保存数据时，先比较数据库当前的值和旧值是否一致，如果一致则进行数据库操作，否则就认为它已经被其他线程修改过了，不再进行操作。
****