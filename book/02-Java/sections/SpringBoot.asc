=== SpringBoot

==== 普通类获取SpringBoot容器管理的bean的类

.1. 首先创建一个用于获取bean的类
[source, java]
----
@Component
public class CommonClassGetBean implements ApplicationContextAware {

    private static ApplicationContext applicationContext;

    @Override
    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {
        if(CommonClassGetBean.applicationContext == null) {
            CommonClassGetBean.applicationContext = applicationContext;
        }
    }

    //获取applicationContext
    public static ApplicationContext getApplicationContext() {
        return applicationContext;
    }

    //通过name获取 Bean.
    public static Object getBean(String name){
        return getApplicationContext().getBean(name);
    }

    //通过class获取Bean.
    public static <T> T getBean(Class<T> clazz){
        return getApplicationContext().getBean(clazz);
    }

    //通过name,以及Clazz返回指定的Bean
    public static <T> T getBean(String name,Class<T> clazz){
        return getApplicationContext().getBean(name, clazz);
    }

}
----

.2. 然后创建一个bean
[source, java]
----
@Configuration
public class AccessUrlConfig {
    @Value("${redas.access_url.do_main}")
    private String doMain;

    @Bean
    public String getDoMain() {
        return doMain;
    }

}
----

.3. 最后通过CommonClassGetBean.getBean得到需要的bean
[source, java]
----
public class GetBeanDemo {
    public String commonClassGetBean() {
        System.out.println(CommonClassGetBean.getBean("getDoMain"))
    }
}
----

==== Springboot maven 打包依赖
[source, xml]
----
<build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <!-- 在打包 war 文件时，排除 tomcat-embed 相关的 jar 包，防止与 Tomcat 服务器冲突 -->
                <!-- 并且，相比修改依赖的方式：
                    <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-tomcat</artifactId>
                        <scope>provided</scope>
                    </dependency>
                    排除 jar 这种方式不会影响在 IDE 工具中直接运行启动类。
                 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <packagingExcludes>WEB-INF/lib/tomcat-embed-*.jar</packagingExcludes>
                </configuration>
            </plugin>
        </plugins>
    </build>
----
