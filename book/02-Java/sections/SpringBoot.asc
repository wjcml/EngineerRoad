=== SpringBoot

==== 普通类获取SpringBoot容器管理的bean的类

.1. 首先创建一个用于获取bean的类
[source, java]
----
@Component
public class CommonClassGetBean implements ApplicationContextAware {

    private static ApplicationContext applicationContext;

    @Override
    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {
        if(CommonClassGetBean.applicationContext == null) {
            CommonClassGetBean.applicationContext = applicationContext;
        }
    }

    //获取applicationContext
    public static ApplicationContext getApplicationContext() {
        return applicationContext;
    }

    //通过name获取 Bean.
    public static Object getBean(String name){
        return getApplicationContext().getBean(name);
    }

    //通过class获取Bean.
    public static <T> T getBean(Class<T> clazz){
        return getApplicationContext().getBean(clazz);
    }

    //通过name,以及Clazz返回指定的Bean
    public static <T> T getBean(String name,Class<T> clazz){
        return getApplicationContext().getBean(name, clazz);
    }

}
----

.2. 然后创建一个bean
[source, java]
----
@Configuration
public class AccessUrlConfig {
    @Value("${redas.access_url.do_main}")
    private String doMain;

    @Bean
    public String getDoMain() {
        return doMain;
    }

}
----

.3. 最后通过CommonClassGetBean.getBean得到需要的bean
[source, java]
----
public class GetBeanDemo {
    public String commonClassGetBean() {
        System.out.println(CommonClassGetBean.getBean("getDoMain"))
    }
}
----