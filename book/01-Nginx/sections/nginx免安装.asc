=== 打包nginx
基于 `centos8` ，将 `nignx` 安装编译，打包为一个压缩文件，可以提供给其他的系统，不用做其他的配置，直接解压就可以使用。

.安装需要的环境和依赖
[source, bash]
----
yum install -y gcc gcc-c++ make automake autoconf libtool pcre pcre-devel zlib zlib-devel openssl openssl-devel
----

.下载nginx, 解压，重命名
[source, bash]
----
cd /usr/local
wget http://nginx.org/download/nginx-1.20.1.tar.gz
tar xzf nginx-1.20.1.tar.gz
mv nginx-1.20.1 nginx
----

.执行configure
这里需要注意相应配置的路径
[source, bash]
----
cd /usr/local/nginx/

./configure \
--prefix=/usr/local/nginx \
--pid-path=/usr/local/nginx/nginx.pid \
--lock-path=/usr/local/nginx/nginx.lock \
--error-log-path=/usr/local/nginx/logs/error.log \
--http-log-path=/usr/local/nginx/logs/access.log \
--with-http_gzip_static_module \
--http-client-body-temp-path=/usr/local/nginx/temp/client \
--http-proxy-temp-path=/usr/local/nginx/temp/proxy \
--http-fastcgi-temp-path=/usr/local/nginx/temp/fastcgi \
--http-uwsgi-temp-path=/usr/local/nginx/temp/uwsgi \
--http-scgi-temp-path=/usr/local/nginx/temp/scgi \
--with-http_stub_status_module \
--with-http_ssl_module
----

.编译
这里编译可能会有错误提示，不用管
[source, bash]
----
make && make install
----

.创建文件夹
[source, bash]
----
mkdir /usr/local/nginx/temp/
mkdir /usr/local/nginx/logs/
----

.启动nginx，访问 `http：//27.0.0.1:80`
[source, bash]
----
cd /usr/local/nginx/sbin
./nginx

# 查看是否有nginx进程
ps -ef | grep nginx
----

.打包（压缩）nginx
将nginx所在的文件夹，打包为 `nginx.tar.gz`
[source, bash]
----
cd /usr/local
tar -zcvf nginx.tar.gz ./nginx
----


=== 免安装nginx
这里安装配置，免安装版本的 `nginx` ，就是上面所提供的 `nginx.tar.gz`

.解压
[source, bash]
注意，这个压缩包必须解压到 `/usr/local` 下，因为在打包 `nginx` 之前，执行的 `./configre` 命令，其中指定了相关的 `nginx` 配置文件夹路径，解压的位置需要和 `--prefix=/usr/local/nginx` 保持一致。
----
d /usr/local
tar xzf nginx.tar.gz
----

.添加systemd
[source, bash]
----
cat << EOF > /etc/systemd/system/nginx.service

[Unit]
Description=nginx-The High-performance HTTP Server
After=network.target

[Service]
Type=forking
ExecStart=/usr/local/nginx/sbin/nginx
ExecReload=/usr/local/nginx/sbin/nginx -s reload
ExecStop=/usr/local/nginx/sbin/nginx -s stop
PrivateTmp=true

[Install]
WantedBy=multi-user.target

EOF
----

.添加开机启动
[source, bash]
----
systemctl start nginx
systemctl enable nginx
----



